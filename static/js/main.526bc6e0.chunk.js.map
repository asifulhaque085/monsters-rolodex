{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","console","log","setState","searchField","target","value","state","fetch","then","res","json","user","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,G,YAAO,SAACC,GAEnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,8BACDF,EAAMG,QAAQC,GAAK,GADlB,0BAGHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCVXC,G,MAAW,SAACR,GAEvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNdO,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACrC,OACE,8BACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCwCHG,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAoBFH,aAAe,SAACI,GACdC,QAAQC,IAAR,gBACA,EAAKC,SAAS,CAAEC,YAAaJ,EAAEK,OAAOC,SArBtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,6CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEX,SAAUoB,S,+BAepC,IAAD,EAC2BC,KAAKN,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZU,EAAiBtB,EAASuB,QAAO,SAAC7B,GAAD,OACrCA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACEW,YAAY,mBACZC,aAAciB,KAAKjB,eAErB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAtCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.526bc6e0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`http://robohash.org/${\r\n          props.monster.id + 50\r\n        }?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = (props) => {\r\n  // console.log(props.monsters);\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.style.css\";\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n// import CardList from \"module\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n  // componentDWillMount() {\n  //   console.log(\"will mount\");\n  // }\n  // componentDidUpdate() {\n  //   console.log(\"did update\");\n  // }\n  // componentWillUnmount() {\n  //   console.log(\"will unmount\");\n  // }\n  handleChange = (e) => {\n    console.log(this);\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search  monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}